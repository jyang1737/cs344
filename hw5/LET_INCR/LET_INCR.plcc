# Language V3

skip WHITESPACE '\s+'
skip COMMENT '%.*'
ADD1OP 'add1'
ADDOP '\+'
COMMA ','
ELSE 'else'
EQUALS '='
IF 'if'
LETINCR 'let\*'
LET 'let'
LPAREN '\('
IN 'in'
RPAREN '\)'
SUB1OP 'sub1'
SUBOP '\-'
THEN 'then'

LIT '\d+'
VAR '[A-Za-z]\w*'

%
<program>        ::= <exp>
<exp>:LitExp     ::= <LIT>
<exp>:VarExp     ::= <VAR>
<exp>:PrimAppExp ::= <prim> LPAREN <rands> RPAREN
<exp>:IfExp      ::= IF <exp>test THEN <exp>thenPart ELSE <exp>elsePart
<exp>:LetExp     ::= LET <letDecls> IN <exp>
<exp>:LetIncr    ::= LETINCR <letDecls> IN <exp>
<letDecls>       **= <VAR> EQUALS <exp>
<rands>          **= <exp> +COMMA
<prim>:AddPrim   ::= ADDOP
<prim>:SubPrim   ::= SUBOP
<prim>:Add1Prim  ::= ADD1OP
<prim>:Sub1Prim  ::= SUB1OP
%

# class methods that just print out the expression
# (Remember that use of toString is only mandated at the tree's
#  root node.)

include Add1Prim.ijava
include AddPrim.ijava
include Exp.ijava
include IfExp.ijava
include LetDecls.ijava
include LetExp.ijava
include LetIncr.ijava
include LitExp.ijava
include Prim.ijava
include PrimAppExp.ijava
include Program.ijava
include Rands.ijava
include Sub1Prim.ijava
include SubPrim.ijava
include VarExp.ijava

# Environment

include Val.ijava
include IntVal.ijava
include EnvNode.ijava
include Env.ijava
include Bindings.ijava
include Binding.ijava

